2015作業1：購物清單產生器
輸入有多少商品種類，輸入有多少會員。
輸入購物清單中至少之商品數量，輸入購物清單中至多之商品數量。
輸入購物清單中商品是否可以重複出現。
輸出有多少可能購物清單（公式解答），輸出所有可能購物清單。
例如:
輸入有多少商品種類：3
輸入有多少會員：2
輸入購物清單中至少之商品數量：1
輸入購物清單中至多之商品數量：2
輸入購物清單中商品是否可以重複出現：Y

輸出 
18
{客1,品1},{客1,品2},{客1,品3},{客1,品1,品1},{客1,品1,品2},{客1,品1,品3},{客1,品2,品2},{客1,品2,品3},{客1,品3,品3}, {客2,品1},{客2,品2},{客2,品3},{客2,品1,品1},{客2,品1,品2},{客2,品1,品3},{客2,品2,品2},{客2,品2,品3},{客2,品3,品3}

2015作業2：購物規則最佳化
[輸入] 延續2015作業1：購物清單產生器，但這次加上隨機選擇部份當輸入。
[輸出] 所選擇購物清單。存成一個檔。
[輸入] 某購物清單檔。
[輸出] 依輸入檔之購物清單產生之購物規則。
[輸入] 目前某會員之購物清單。
[輸出] 預測該會員之可能增加購買項目，送出推薦廣告。
如何進行最佳化規則計算為開放問題，同學可各自發揮進行報告。
最佳化目標設定為『運算複雜度』。例如：比對多少次，NOT/AND/OR運算多少次，以運算次數最少為贏。

例如:
如2015作業1：購物清單產生器，產生所有購物清單。
輸入隨機選擇購物清單數量：3
輸出所選擇購物清單：
清單1=客1,品1,品2
清單2=客1,品2,品3
清單3=客2,品1,品3
存到buy1.txt
讀入buy1.txt
輸出依以上購物清單產生之購物規則：客1*品1->品2, 客1*品2->品1, 客1*品3->品2, 客1*品2->品3, 客2*品1->品3, 客2*品3->品1
輸入某會員之購物清單：{客1,品3}
輸出該會員之可能增加購買項目：品2 
先說明規則之計算如何進行最佳化？
假設所用為循序比對，則比對輸入”客1”然後”品3”，要比對6次才對到客1*品3->品2，預測該會員可能增加購買項目”品2”，送出推薦廣告。
可思考如該會員確定增加購買項目”品2”，則又會如何？

大家面前的問題都沒談到如何最佳化, 其實這才是最難的問題. 所以老師多給一個例子請大家想想.

輸出所選擇購物清單：

清單1=客1,品100,品200

清單2=客1,品200,品3

清單3=客2,品1,品3

清單4=客2,品100,品200

清單5=客3,品2,品3

清單6=客3,品1,品3

清單7=客3,品100,品200

清單8=客4,品200,品3

清單9=客4,品100,品200

存到buy2.txt

讀入buy2.txt

輸出依以上購物清單產生之購物規則：

輸入某會員之購物清單：{客4,品100}

輸出該會員之可能增加購買項目：

先說明規則之計算如何進行最佳化？

如今天所宣佈，下週交PRJ2&小考。PRJ2考慮possibility而非probability，只要有可能就可以推薦，重點在要說明資料結構與規則推論方式，如何使邏輯推論優化（最快推論出來）。請回答：當你推薦買物品2而客戶卻回答『不買』，如何推論其他推薦？